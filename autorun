#!/usr/bin/env bash
set -euo pipefail

displayUsage() {
    echo '
<>  angle brackets for required parameters: ping <hostname>
[]  square brackets for optional parameters: mkdir [-p] <dirname>
... ellipses for repeated items: cp <source1> [source2â€¦] <dest>
 |  vertical bars for choice of items: netstat {-t|-u}

usage:  name <operation> [...]
operations:
    autorun {-h help} shows this dialogue
    autorun {-n number} number of times to run the correction
    autorun {-d daemon} keep running until process is closed
    autorun {-t time} time to wait before next iteration in minutes'
}

n=1
t=$(( 15*60 ))
daemon=false
while getopts ":hn:dt:" opt; do
    case ${opt} in
	n)
	    n="$OPTARG"
	    echo "N SET TO: $n"
	    ;;
	d)
	    daemon=true
	    ;;
	t)
	    t=$(( $OPTARG ))
	    echo "TIME SET TO: $t"
	    ;;
	h)
	    displayUsage
	    exit 1
	    ;;
	\?)
	    echo "Invalid option: $OPTARG" 1>&2
	    exit 2
	    ;;
	:)
	    echo "Invalid option: $OPTARG requires an argument" 1>&2
	    exit 2
	    ;;
    esac
done

shift $((OPTIND-1))


while true; do
    echo "
################################################################################
#                             download submissions                             #
################################################################################"
    ./process_submissions.sh
    echo "
################################################################################
#                              uploading comments                              #
################################################################################"
    python upload_comments.py
    echo "
################################################################################
#                               updating grades                                #
################################################################################"
    python grade_submissions.py

    if [ "$n" -gt 0 ] || $daemon
    then
	n=$(( n-1 ))
	sleep $t
    else
	if [ "$n" = "0" ]
	then
	    break
	fi
    fi
done

echo "Autorun: Done!"
